# .home/.gitconfig.base

[user]
        name  = Jeff Sharp
        email = jeff.sharp@git

[core]
	# Global ignore file
	excludesfile = ~/.gitignore

[fetch]
	prune = true

[diff]
	# Enable experimental heuristics that shift diff hunk boundaries
	# to make patches easier to read.
	indentHeuristic = true

[merge]
	defaultToUpstream = true
	log = 1000

[submodule]
	# Specifies how many submodules are fetched/cloned at the same time.
	fetchJobs = 4

[pager]
	# Enable change highlighting in most diffs.  Requires /usr/local/share/git-core/contrib/diff-highlight/diff-highlight
	log  = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	show = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	diff = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less

[interactive]
	# Enable change highlighting in interactive staging.
	diffFilter = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight

[alias]
	# Convenience
	a        = add
	ai       = add --interactive
	aa       = add --all
	aai      = add --all --interactive
	b        = branch
	bl       = !git -p branch --all -vv
	ci       = commit
	ca       = commit --all
	co       = checkout
	cob      = checkout -b
	com      = checkout master
	cow      = checkout work
	cp       = cherry-pick -ex
	d        = diff
	dc       = diff --cached
	f        = fetch --all
	m        = merge --no-edit
	r        = rebase
	ra       = rebase --abort
	rc       = rebase --continue
	ri       = rebase --interactive HEAD~10
	s        = status
	sub      = submodule update --init --rebase --recursive
	subup    = submodule update --init --rebase --recursive --remote
	up       = pull --all --rebase
	upm      = pull --all --no-edit

	# Logs
	lg     = log --graph --pretty=format:'%Cred%h%Creset -%C(bold yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset' --abbrev-commit --date-order
	lga    = log --graph --pretty=format:'%Cred%h%Creset -%C(bold yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset' --abbrev-commit --date-order --all
	me     = log --graph --pretty=format:'%Cred%h%Creset -%C(bold yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset' --abbrev-commit --date-order --cherry master..HEAD
	trace  = log --follow -p

	# Magic
	loc = "!git grep -I --name-only -z '' | xargs -0 wc -l | sort"
	cherry-patch = "!_() { ( cd \"$1\" && shift && git format-patch --stdout \"$@\" ) | git am --keep-cr --ignore-space-change --whitespace=nowarn; } ; _"

# vim: filetype=gitconfig:ts=8:sts=8:sw=8:noexpandtab
